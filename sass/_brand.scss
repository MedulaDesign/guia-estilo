/**
 * Colors
 */
$brandColor: #289B48;
$brandColor2: #E5BC21;
$brandColor3: #84BF41;

$grisClaro: #D6D6D6;
$grisMasClaro: #EEE;
$grisBlanco: #F0F0F0;
$grisMedio: #777;
$grisOscuro: #414141;
$grisMasOscuro: #333333;
$grisNegro: #1A1A1A;

$amarillo: #E5BC21;
$verde: #289B48;
$rojo: #C42220;
$azul: #3A6ABC;

$verdeClaro: #84BF41;
$amarilloIntenso: #fcd700;//amarillo m√©dula


/**
 * Classes reflecting the variables
 * good for prototyping
 */



$color_names: brandColor brandColor2 brandColor3 grisClaro grisMasClaro grisBlanco grisMedio grisOscuro grisMasOscuro grisNegro amarillo verde rojo azul verdeClaro amarilloIntenso;
$color_vars: $brandColor $brandColor2 $brandColor3 $grisClaro $grisMasClaro $grisBlanco $grisMedio $grisOscuro $grisMasOscuro $grisNegro $amarillo $verde $rojo $azul $verdeClaro $amarilloIntenso;

/**
 * Loop on vars to generate the classes
 * Thanks to: Dale Sande. http://blackfalcon.roughdraft.io/4615645-iterate-list-to-produce-placeholder-classes
 * The important functions are index() and nth()
 * In this same lik there's an alternative syntax, that could be more readable for some
 */

@each $name in $color_names {
	$i: index($color_names, $name);
	/**
	 * You can't use the name of variable as a class, it will get printed as the value.
	 */
	.#{$name} {
		color: nth($color_vars, $i);
	}
	.#{$name}-bg {
		background: nth($color_vars, $i);
	}
}


/**
 * Font Stacks
 */
$sans-stack: Frutiger, "Frutiger Linotype", Univers, Calibri, "Gill Sans", "Gill Sans MT", "Myriad Pro", Myriad, "DejaVu Sans Condensed", "Liberation Sans", "Nimbus Sans L", Tahoma, Geneva, "Helvetica Neue", Helvetica, Arial, sans-serif;
$serif-stack: Constantia, "Lucida Bright", Lucidabright, "Lucida Serif", Lucida, "DejaVu Serif", "Bitstream Vera Serif", "Liberation Serif", Georgia, serif;
$display-stack: Impact, Haettenschweiler, "Franklin Gothic Bold", Charcoal, "Helvetica Inserat", "Bitstream Vera Sans Bold", "Arial Black", sans-serif;

.sans{
	font-family: $sans-stack;
}
.serif{
	font-family: $serif-stack;
}
.display{
	font-family: $display-stack;
}


/**
 * Other variables
 */

$gridGutter:16px;
$anchoDefault:970px;
$anchoWide:1140px;
$anchoMinimo:776px;